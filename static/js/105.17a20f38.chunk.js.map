{"version":3,"file":"static/js/105.17a20f38.chunk.js","mappings":"0LACA,EAAyB,uB,SCEZA,EAAS,WACpB,OACE,gBAAKC,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,UAAU,eACVC,OAAO,OACPC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,KAIhB,C,oHChBYC,EAAY,mCAAG,WAAMC,GAAN,wIAGlBC,EAAc,IAAIC,gBAAgB,CACtCC,QANU,mCAOVC,SAAU,UACVC,MAAOL,EACPM,KAAM,IAGFC,EAVkB,kEAUDN,GAVC,SAWDO,MAAMD,GAXL,WAWlBE,EAXkB,QAYVC,GAZU,sBAahB,IAAIC,MAAJ,mCAAsCF,EAASG,SAb/B,wBAeLH,EAASI,OAfJ,eAelBC,EAfkB,yBAiBjBA,EAAKC,SAjBY,kCAmBxBC,QAAQC,MAAR,MAnBwB,0DAAH,sD,0BCDzB,EAAuB,qBAAvB,EAAoD,sBAApD,EAAgF,oBAAhF,EAA2G,qB,SC+D3G,EA1De,WACb,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAuCC,EAAAA,EAAAA,IAAgB,CACrDC,OAAQ,KADV,eAAOrB,EAAP,KAAqBsB,EAArB,KAGA,GAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOF,EAAP,KAAeO,EAAf,KACMC,EAAc7B,EAAa8B,IAAI,UAM/BC,EAAc,mCAAG,WAAMC,GAAN,iEACrBA,EAAMC,iBACNX,EAAe,CAAED,OAAQA,IACzBO,EAAU,IAHW,2CAAH,uDAKpBM,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,2FAClBV,GAAa,GADK,SAEU1B,EAAa8B,GAFvB,OAEZO,EAFY,OAGlBT,EAAUS,GACVX,GAAa,GAJK,2CAAH,qDAMjBU,GACD,GAAE,CAACN,IAEJ,IAAMQ,EAAOX,EAAOY,KAAI,SAACC,EAAOC,GAAR,OACtB,0BACG,KACD,UAAC,KAAD,CAAMC,GAAE,UAAKF,EAAMG,IAAMC,MAAO,CAAEC,KAAM1B,GAAxC,UACG,IACAqB,EAAMM,WAJFN,EAAMG,GAAK,IAAMF,EADJ,IASxB,OACE,iCACE,kBAAMnD,UAAWC,EAAUwD,SAAUf,EAArC,WACE,kBACE1C,UAAWC,EACXyD,KAAK,OACLC,MAAO3B,EACP4B,aAAa,MACbC,WAAS,EACTC,SArCa,SAAAC,GACnBxB,EAAUwB,EAAEC,OAAOL,MACpB,EAoCOM,YAAY,eAEd,mBAAQjE,UAAWC,EAASyD,KAAK,SAAjC,wBAIF,eAAI1D,UAAWC,EAAf,SAA2BkC,IAAa,SAACpC,EAAA,EAAD,KAAeiD,MAG5D,C","sources":["webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","components/searchMovies.js","webpack://react-homework-template/./src/pages/Movies.module.css?d157","pages/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import React from 'react';\nimport { Grid } from 'react-loader-spinner';\nimport css from './Loader.module.css';\nexport const Loader = () => {\n  return (\n    <div className={css.loader}>\n      <Grid\n        height=\"80\"\n        width=\"80\"\n        color=\"#4fa94d\"\n        ariaLabel=\"grid-loading\"\n        radius=\"12.5\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n      />\n    </div>\n  );\n};\n","const API_KEY = 'b942b8bf626a04f48b07153a95ee51a0';\n\nexport const searchMovies = async searchParams => {\n  const link = `https://api.themoviedb.org/3/search/movie`;\n  try {\n    const fetchParams = new URLSearchParams({\n      api_key: API_KEY,\n      language: 'en - US',\n      query: searchParams,\n      page: 1,\n    });\n\n    const url = `${link}?${fetchParams}`;\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(`Fetch failed with status ${response.status}`);\n    }\n    const data = await response.json();\n\n    return data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Movies_form__5L7s0\",\"input\":\"Movies_input__N3yRL\",\"btn\":\"Movies_btn__CifXa\",\"list\":\"Movies_list__pLFBP\"};","import { Loader } from 'components/Loader/Loader';\nimport { searchMovies } from 'components/searchMovies';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport css from './Movies.module.css';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [searchParams, setSerchParams] = useSearchParams({\n    search: '',\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [movies, setMovies] = useState([]);\n  const [search, setSearch] = useState('');\n  const searchValue = searchParams.get('search');\n\n  const handleChange = e => {\n    setSearch(e.target.value);\n  };\n\n  const handleOnSubmit = async event => {\n    event.preventDefault();\n    setSerchParams({ search: search });\n    setSearch('');\n  };\n  useEffect(() => {\n    const fetchMovies = async () => {\n      setIsLoading(true);\n      const fetchedMovies = await searchMovies(searchValue);\n      setMovies(fetchedMovies);\n      setIsLoading(false);\n    };\n    fetchMovies();\n  }, [searchValue]);\n\n  const list = movies.map((movie, index) => (\n    <li key={movie.id + '-' + index}>\n      {' '}\n      <Link to={`${movie.id}`} state={{ from: location }}>\n        {' '}\n        {movie.title}\n      </Link>\n    </li>\n  ));\n  return (\n    <>\n      <form className={css.form} onSubmit={handleOnSubmit}>\n        <input\n          className={css.input}\n          type=\"text\"\n          value={search}\n          autoComplete=\"off\"\n          autoFocus\n          onChange={handleChange}\n          placeholder=\"search...\"\n        ></input>\n        <button className={css.btn} type=\"submit\">\n          Search\n        </button>\n      </form>\n      <ul className={css.list}>{(isLoading && <Loader />) || list}</ul>\n    </>\n  );\n};\nexport default Movies;\n"],"names":["Loader","className","css","height","width","color","ariaLabel","radius","wrapperStyle","wrapperClass","visible","searchMovies","searchParams","fetchParams","URLSearchParams","api_key","language","query","page","url","fetch","response","ok","Error","status","json","data","results","console","error","location","useLocation","useSearchParams","search","setSerchParams","useState","isLoading","setIsLoading","movies","setMovies","setSearch","searchValue","get","handleOnSubmit","event","preventDefault","useEffect","fetchMovies","fetchedMovies","list","map","movie","index","to","id","state","from","title","onSubmit","type","value","autoComplete","autoFocus","onChange","e","target","placeholder"],"sourceRoot":""}