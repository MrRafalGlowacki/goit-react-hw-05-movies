{"version":3,"file":"static/js/105.ff933a7e.chunk.js","mappings":"2NAEaA,EAAY,mCAAG,WAAMC,GAAN,wIAGlBC,EAAc,IAAIC,gBAAgB,CACtCC,QANU,mCAOVC,SAAU,UACVC,MAAOL,EACPM,KAAM,IAGFC,EAVkB,kEAUDN,GAVC,SAWDO,MAAMD,GAXL,WAWlBE,EAXkB,QAYVC,GAZU,sBAahB,IAAIC,MAAJ,mCAAsCF,EAASG,SAb/B,wBAeLH,EAASI,OAfJ,eAelBC,EAfkB,yBAiBjBA,EAAKC,SAjBY,kCAmBxBC,QAAQC,MAAR,MAnBwB,0DAAH,sD,0BCDzB,EAAuB,qBAAvB,EAAoD,sBAApD,EAAgF,oBAAhF,EAA2G,qB,SC2D3G,EAvDe,WACb,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAuCC,EAAAA,EAAAA,IAAgB,CACrDC,OAAQ,KADV,eAAOrB,EAAP,KAAqBsB,EAArB,KAGA,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOF,EAAP,KAAeK,EAAf,KACMC,EAAc3B,EAAa4B,IAAI,UAM/BC,EAAc,mCAAG,WAAMC,GAAN,iEACrBA,EAAMC,iBACNT,EAAe,CAAED,OAAQA,IACzBK,EAAU,IAHW,2CAAH,uDAKpBM,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,oGACUlC,EAAa4B,GADvB,OACZO,EADY,OAElBT,EAAUS,GAFQ,2CAAH,qDAIjBD,GACD,GAAE,CAACN,IAEJ,IAAMQ,EAAOX,EAAOY,KAAI,SAACC,EAAOC,GAAR,OACtB,0BACG,KACD,UAAC,KAAD,CAAMC,GAAE,UAAKF,EAAMG,IAAMC,MAAO,CAAEC,KAAMxB,GAAxC,UACG,IACAmB,EAAMM,WAJFN,EAAMG,GAAK,IAAMF,EADJ,IASxB,OACE,iCACE,kBAAMM,UAAWC,EAAUC,SAAUjB,EAArC,WACE,kBACEe,UAAWC,EACXE,KAAK,OACLC,MAAO3B,EACP4B,aAAa,MACbC,WAAS,EACTC,SAnCa,SAAAC,GACnB1B,EAAU0B,EAAEC,OAAOL,MACpB,EAkCOM,YAAY,eAEd,mBAAQV,UAAWC,EAASE,KAAK,SAAjC,wBAIF,eAAIH,UAAWC,EAAf,SAA0BV,MAG/B,C,sBC3DD,SAASoB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBd,EAAQe,EAAKf,KAInB,CAHE,MAAO/B,GAEP,YADAyC,EAAOzC,EAET,CAEI8C,EAAKC,KACPP,EAAQT,GAERiB,QAAQR,QAAQT,GAAOkB,KAAKP,EAAOC,EAEvC,CAEe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUR,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAMX,GACbO,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQZ,EAClE,CAEA,SAASY,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CAEAf,OAAMgB,EACR,GACF,CACF,C","sources":["components/searchMovies.js","webpack://react-homework-template/./src/pages/Movies.module.css?d157","pages/Movies.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["const API_KEY = 'b942b8bf626a04f48b07153a95ee51a0';\n\nexport const searchMovies = async searchParams => {\n  const link = `https://api.themoviedb.org/3/search/movie`;\n  try {\n    const fetchParams = new URLSearchParams({\n      api_key: API_KEY,\n      language: 'en - US',\n      query: searchParams,\n      page: 1,\n    });\n\n    const url = `${link}?${fetchParams}`;\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(`Fetch failed with status ${response.status}`);\n    }\n    const data = await response.json();\n\n    return data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Movies_form__5L7s0\",\"input\":\"Movies_input__N3yRL\",\"btn\":\"Movies_btn__CifXa\",\"list\":\"Movies_list__pLFBP\"};","import { searchMovies } from 'components/searchMovies';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport css from './Movies.module.css';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [searchParams, setSerchParams] = useSearchParams({\n    search: '',\n  });\n  const [movies, setMovies] = useState([]);\n  const [search, setSearch] = useState('');\n  const searchValue = searchParams.get('search');\n\n  const handleChange = e => {\n    setSearch(e.target.value);\n  };\n\n  const handleOnSubmit = async event => {\n    event.preventDefault();\n    setSerchParams({ search: search });\n    setSearch('');\n  };\n  useEffect(() => {\n    const fetchMovies = async () => {\n      const fetchedMovies = await searchMovies(searchValue);\n      setMovies(fetchedMovies);\n    };\n    fetchMovies();\n  }, [searchValue]);\n\n  const list = movies.map((movie, index) => (\n    <li key={movie.id + '-' + index}>\n      {' '}\n      <Link to={`${movie.id}`} state={{ from: location }}>\n        {' '}\n        {movie.title}\n      </Link>\n    </li>\n  ));\n  return (\n    <>\n      <form className={css.form} onSubmit={handleOnSubmit}>\n        <input\n          className={css.input}\n          type=\"text\"\n          value={search}\n          autoComplete=\"off\"\n          autoFocus\n          onChange={handleChange}\n          placeholder=\"search...\"\n        ></input>\n        <button className={css.btn} type=\"submit\">\n          Search\n        </button>\n      </form>\n      <ul className={css.list}>{list}</ul>\n    </>\n  );\n};\nexport default Movies;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["searchMovies","searchParams","fetchParams","URLSearchParams","api_key","language","query","page","url","fetch","response","ok","Error","status","json","data","results","console","error","location","useLocation","useSearchParams","search","setSerchParams","useState","movies","setMovies","setSearch","searchValue","get","handleOnSubmit","event","preventDefault","useEffect","fetchMovies","fetchedMovies","list","map","movie","index","to","id","state","from","title","className","css","onSubmit","type","value","autoComplete","autoFocus","onChange","e","target","placeholder","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}