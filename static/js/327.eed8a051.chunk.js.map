{"version":3,"file":"static/js/327.eed8a051.chunk.js","mappings":"oOAEaA,EAAiB,mCAAG,gGAClB,mDADkB,SAIvBC,EAAe,IAAIC,gBAAgB,CACvCC,QAPU,qCAUNC,EARuB,UAClB,mDADkB,YAQNH,GARM,SASNI,MAAMD,GATA,WASvBE,EATuB,QAUfC,GAVe,sBAWrB,IAAIC,MAAJ,mCAAsCF,EAASG,SAX1B,wBAaVH,EAASI,OAbC,eAavBC,EAbuB,yBAetBA,EAAKC,SAfiB,kCAiB7BC,QAAQC,MAAR,MAjB6B,0DAAH,qD,iBCD9B,GAAgB,UAAY,wBAAwB,KAAO,oB,SC+B3D,EA3Ba,WACX,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAoB,mCAAG,oGACErB,IADF,OACrBsB,EADqB,OAE3BL,EAAUK,GAFiB,2CAAH,qDAI1BD,GACD,GAAE,IAEH,IAAME,EAAOP,EAAOQ,KAAI,SAACC,EAAOC,GAAR,OACtB,0BACG,KACD,UAAC,KAAD,CAAMC,GAAE,iBAAYF,EAAMG,IAAMC,MAAO,CAAEC,KAAMZ,GAA/C,UACG,IACAO,EAAMM,WAJFN,EAAMG,GAAK,IAAMF,EADJ,IASxB,OACE,iBAAKM,UAAWC,EAAAA,UAAhB,WACE,eAAID,UAAWC,EAAAA,MAAf,iCACA,eAAID,UAAWC,EAAAA,KAAf,SAA0BV,MAG/B,C,sBC/BD,SAASW,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAO7B,GAEP,YADAuB,EAAOvB,EAET,CAEI4B,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["components/getTrandingMovies.js","webpack://react-homework-template/./src/pages/Home.module.css?8f25","pages/Home.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["const API_KEY = 'b942b8bf626a04f48b07153a95ee51a0';\n\nexport const getTrandingMovies = async () => {\n  const link = 'https://api.themoviedb.org/3/trending/movie/week';\n\n  try {\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY,\n    });\n\n    const url = `${link}?${searchParams}`;\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(`Fetch failed with status ${response.status}`);\n    }\n    const data = await response.json();\n\n    return data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Home_container__AHomM\",\"list\":\"Home_list__88Uf4\"};","import React, { useState, useEffect } from 'react';\nimport { getTrandingMovies } from 'components/getTrandingMovies';\nimport { Link, useLocation } from 'react-router-dom';\nimport css from './Home.module.css'\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  useEffect(() => {\n    const fetcheTrandingMovies = async () => {\n      const trandingMovies = await getTrandingMovies();\n      setMovies(trandingMovies);\n    };\n    fetcheTrandingMovies();\n  }, []);\n\n  const list = movies.map((movie, index) => (\n    <li key={movie.id + '-' + index}>\n      {' '}\n      <Link to={`movies/${movie.id}`} state={{ from: location }}>\n        {' '}\n        {movie.title}\n      </Link>\n    </li>\n  ));\n  return (\n    <div className={css.container}>\n      <h1 className={css.title}>Trending this week</h1>\n      <ul className={css.list}>{list}</ul>\n    </div>\n  );\n};\nexport default Home;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["getTrandingMovies","searchParams","URLSearchParams","api_key","url","fetch","response","ok","Error","status","json","data","results","console","error","useState","movies","setMovies","location","useLocation","useEffect","fetcheTrandingMovies","trandingMovies","list","map","movie","index","to","id","state","from","title","className","css","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}