{"version":3,"file":"static/js/826.631e224a.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/AdditionalInfo.module.css?c00a","components/AdditionalInfo.jsx","components/getMoviesById.js","webpack://react-homework-template/./src/pages/MovieDetails.module.css?6cd2","pages/MovieDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import React from 'react';\nimport { Grid } from 'react-loader-spinner';\nimport css from './Loader.module.css';\nexport const Loader = () => {\n  return (\n    <div className={css.loader}>\n      <Grid\n        height=\"80\"\n        width=\"80\"\n        color=\"#4fa94d\"\n        ariaLabel=\"grid-loading\"\n        radius=\"12.5\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"AdditionalInfo_container__n4qIx\",\"link\":\"AdditionalInfo_link__xU1bE\"};","import React from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport css from './AdditionalInfo.module.css';\n\nexport const AdditionalInfo = () => {\n  const location = useLocation();\n  return (\n    <div className={css.container}>\n      <h2>Additional Information</h2>\n      <ul className={css.link}>\n        <li>\n          <NavLink to=\"cast\" state={location.state}>\n            cast\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"reviews\" state={location.state}>\n            reviews\n          </NavLink>\n        </li>\n      </ul>\n    </div>\n  );\n};\n","const API_KEY = 'b942b8bf626a04f48b07153a95ee51a0';\n\nexport const getMoviesById = async movieId => {\n  const link = `https://api.themoviedb.org/3/movie/${movieId}`;\n\n  try {\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY,\n    });\n\n    const url = `${link}?${searchParams}`;\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(`Fetch failed with status ${response.status}`);\n    }\n    const data = await response.json();\n\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetails_container__yKjnD\",\"link\":\"MovieDetails_link__wv3O1\",\"poster\":\"MovieDetails_poster__s+oXh\",\"title\":\"MovieDetails_title__-2Xvc\",\"info\":\"MovieDetails_info__QdAR5\",\"score\":\"MovieDetails_score__nyd0Y\",\"genres\":\"MovieDetails_genres__wYpii\"};","import { AdditionalInfo } from 'components/AdditionalInfo';\nimport { getMoviesById } from 'components/getMoviesById';\nimport { Loader } from 'components/Loader/Loader';\nimport React, { lazy, useEffect, useState } from 'react';\nimport { Link, Route, Routes, useLocation, useParams } from 'react-router-dom';\nimport css from './MovieDetails.module.css';\n\nconst Cast = lazy(() => import('components/Cast'));\nconst Reviews = lazy(() => import('components/Reviews'));\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  const handleGenreList = () => {\n    const genresArray = movies.genres;\n    const genres = genresArray?.map(genre => ' ' + genre.name);\n    return genres;\n  };\n  const handleScore = () => {\n    const score = movies.vote_average;\n    const percentageScore = Number(score * 10);\n    return percentageScore?.toFixed(1);\n  };\n  const handleYear = () => {\n    const date = movies.release_date;\n    const year = date?.substring(0, 4);\n    return year;\n  };\n\n  useEffect(() => {\n    const fetchById = async s => {\n      setIsLoading(true);\n      const moviesById = await getMoviesById(s);\n      setMovies(moviesById);\n      setIsLoading(false);\n    };\n    fetchById(id);\n  }, [id]);\n  return (\n    (isLoading && <Loader />) || (\n      <>\n        <div className={css.container}>\n          <Link className={css.link} to={backLinkHref}>\n            Back\n          </Link>\n          <img\n            className={css.poster}\n            src={\n              movies.poster_path\n                ? `https://image.tmdb.org/t/p/w500${movies.poster_path}`\n                : 'https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/1665px-No-Image-Placeholder.svg.png'\n            }\n            alt={movies.title}\n          />\n          <h1 className={css.title}>\n            {movies.title} ({handleYear()})\n          </h1>\n          <div className={css.info}>\n            <div className={css.score}>\n              <h4>User Score:</h4>\n              <p>{handleScore() + '%'}</p>\n            </div>\n            <div className={css.overwiev}>\n              <h4>Overwiev</h4>\n              <p>{movies.overview}</p>\n            </div>\n            <div className={css.genres}>\n              <h4>genres:</h4>\n              <p>{handleGenreList()}</p>\n            </div>\n          </div>\n        </div>\n        <AdditionalInfo state={location.state} />\n        <Routes>\n          <Route path=\"cast\" element={<Cast />} />\n          <Route path=\"reviews\" element={<Reviews />} />\n        </Routes>\n      </>\n    )\n  );\n};\n\nexport default MovieDetails;\n"],"names":["Loader","className","css","height","width","color","ariaLabel","radius","wrapperStyle","wrapperClass","visible","AdditionalInfo","location","useLocation","to","state","getMoviesById","movieId","link","searchParams","URLSearchParams","api_key","url","fetch","response","ok","Error","status","json","data","console","error","Cast","lazy","Reviews","id","useParams","useState","isLoading","setIsLoading","movies","setMovies","backLinkHref","from","useEffect","fetchById","s","moviesById","src","poster_path","alt","title","date","release_date","substring","handleYear","score","vote_average","percentageScore","Number","toFixed","handleScore","overview","genresArray","genres","map","genre","name","handleGenreList","path","element"],"sourceRoot":""}